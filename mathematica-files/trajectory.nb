(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     70852,       1780]
NotebookOptionsPosition[     68221,       1726]
NotebookOutlinePosition[     68582,       1742]
CellTagsIndexPosition[     68539,       1739]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"fx", "(", "t_", ")"}], "=", 
    RowBox[{"4.5", 
     RowBox[{"sen", "(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "x"], "t"}], "+", 
       FractionBox["\[Pi]", "2"]}], ")"}]}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"fy", "(", "t_", ")"}], "=", 
    RowBox[{"1.5", 
     RowBox[{"sen", "(", 
      RowBox[{
       SubscriptBox["\[Omega]", "y"], "t"}], ")"}]}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "x"], "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "T"]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "y"], "=", 
    FractionBox[
     RowBox[{"6", "\[Pi]"}], "T"]}], ";"}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.757805198422122*^9, 3.757805291781451*^9}, {
  3.757808177573413*^9, 3.757808202962269*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"34295afe-218f-460d-bc2c-e01575b0fc5c"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"CForm", "[", 
   RowBox[{"fx", "[", "t", "]"}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.757805903371776*^9, 3.757805917913271*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c922258e-1c7d-4f24-b472-f8e84d66e530"],

Cell["4.5*sen(Pi/2. + (2*Pi*t)/T)", "Output",
 CellChangeTimes->{3.757809599819974*^9, 3.7578096988107224`*^9, 
  3.7578099786268673`*^9},
 CellLabel->
  "Out[20]//CForm=",ExpressionUUID->"8f21774e-9655-4731-9d3b-dd0e42723eeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "derivate of 4.5 sen((2 \\[Pi] t)/T + \\[Pi]/2)", Typeset`newq$$ = 
   "derivate of 4.5 sen((2 \\[Pi] t)/T + \\[Pi]/2)", Typeset`chosen$$ = 
   "D[4.5*Sin[(2*Pi*t)/T + Pi/2], t]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "derivate of 4.5 sen((2 \\[Pi] t)/T + \\[Pi]/2)", 
                  Defer[
                   D[4.5 Sin[((2 Pi) Global`t)/Global`T + Pi/2], Global`t]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", "t"}], 
                  "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", "t"}], 
                  "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", "t"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "derivate of 4.5 sen((2 \\[Pi] t)/T + \\[Pi]/2)", 
                    Defer[
                    D[4.5 Sin[((2 Pi) Global`t)/Global`T + Pi/2], Global`t]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", "t"}], 
                    "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", "t"}], 
                    "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", "t"}], 
                    "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellChangeTimes->{{3.757809627855592*^9, 3.7578096305102463`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"ece354a9-a0c6-4bc7-aa8b-dd90bb4b2f99"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"28.274333882308138`", " ", 
     RowBox[{"sin", "(", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]", " ", "t"}], "T"], ")"}]}], "T"]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.7578096536578407`*^9, 3.757809698883415*^9, 
  3.757809978649892*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"ddf48fa0-e915-4394-9ab0-497cc6df500c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"CForm", "[", "%", "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.75780965666249*^9, 3.75780966352363*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"111bc9f9-5ad1-4e83-91f2-322adf91521d"],

Cell["(-28.274333882308138*Sin((2*Pi*t)/T))/T", "Output",
 CellChangeTimes->{3.7578096989138327`*^9, 3.757809978669786*^9},
 CellLabel->
  "Out[22]//CForm=",ExpressionUUID->"3ab1a4fa-d60a-4da0-9d6c-342b09d78eb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "second derivate of 4.5 sen((2 \[Pi] t)/T + \[Pi]/2)", Typeset`newq$$ = 
   "second derivate of 4.5 sen((2 \[Pi] t)/T + \[Pi]/2)", Typeset`chosen$$ = 
   "D[4.5*Sin[(2*Pi*t)/T + Pi/2], {t, 2}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "second derivate of 4.5 sen((2 \[Pi] t)/T + \[Pi]/2)", 
                  Defer[
                   D[
                   4.5 Sin[((2 Pi) Global`t)/Global`T + Pi/2], {
                    Global`t, 2}]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "second derivate of 4.5 sen((2 \[Pi] t)/T + \[Pi]/2)", 
                    Defer[
                    D[
                    4.5 Sin[((2 Pi) Global`t)/Global`T + Pi/2], {
                    Global`t, 2}]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"4.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    " ", "+", " ", 
                    RowBox[{"Pi", "/", "2"}]}], "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[23]:=",ExpressionUUID->"2a21ea0f-fd47-482e-95ea-847f1b2452c6"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"177.65287921960845`", " ", 
     RowBox[{"cos", "(", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]", " ", "t"}], "T"], ")"}]}], 
    SuperscriptBox["T", "2"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.757805632857445*^9, 3.75780951684341*^9, 
  3.757809698938497*^9, 3.7578099786987*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"879edf2d-e92a-4e4b-9e4a-6acf8ab4a9e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"CForm", "[", "%", "]"}], TraditionalForm]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"88414e7a-1600-4e47-adde-c6a6bd1a6206"],

Cell["(-177.65287921960845*Cos((2*Pi*t)/T))/Power(T,2)", "Output",
 CellChangeTimes->{3.7578096989600573`*^9, 3.757809978723641*^9},
 CellLabel->
  "Out[24]//CForm=",ExpressionUUID->"a1f77454-b185-4404-9bab-4be6e97c3c07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"CForm", "[", 
   RowBox[{"fy", "[", "t", "]"}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.7578059428936043`*^9, 3.75780594325041*^9}, {
  3.757806471420745*^9, 3.757806483632448*^9}, {3.757806582864973*^9, 
  3.7578065841191387`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"53d53d44-b469-4eb5-b105-0f582a3ce21a"],

Cell["1.5*sen((6*Pi*t)/T)", "Output",
 CellChangeTimes->{3.7578096007616034`*^9, 3.757809698851377*^9, 
  3.757809978747612*^9},
 CellLabel->
  "Out[25]//CForm=",ExpressionUUID->"79f13d19-84b1-4fc5-92d0-62b851df2e0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "derivate of 1.5 sen((6 \[Pi] t)/T)", 
   Typeset`newq$$ = "derivate of 1.5 sen((6 \[Pi] t)/T)", Typeset`chosen$$ = 
   "D[1.5*Sin[(6*Pi*t)/T], t]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "derivate of 1.5 sen((6 \[Pi] t)/T)", 
                  Defer[
                   D[1.5 Sin[((6 Pi) Global`t)/Global`T], Global`t]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", "t"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", "t"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", "t"}], "]"}]], "Input"], All]; 
                SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "derivate of 1.5 sen((6 \[Pi] t)/T)", 
                    Defer[
                    D[1.5 Sin[((6 Pi) Global`t)/Global`T], Global`t]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", "t"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", "t"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", "t"}], "]"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[26]:=",ExpressionUUID->"201b9741-6141-44e6-a687-e4a1b0ce584c"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"28.274333882308138`", " ", 
    RowBox[{"cos", "(", 
     FractionBox[
      RowBox[{"6", " ", "\[Pi]", " ", "t"}], "T"], ")"}]}], "T"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.757809574553392*^9, 3.75780969897933*^9, 
  3.757809978771055*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"6f3bf896-4b91-4e8e-aa82-b2c43c2ff51c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"CForm", "[", "%", "]"}], TraditionalForm]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"f2fd026d-51b7-4902-9964-864ae12e1708"],

Cell["(28.274333882308138*Cos((6*Pi*t)/T))/T", "Output",
 CellChangeTimes->{3.757809699040041*^9, 3.757809978789256*^9},
 CellLabel->
  "Out[27]//CForm=",ExpressionUUID->"4f036191-4fed-4d90-b00e-42583f830618"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "second derivate of 1.5 sen((6 \[Pi] t)/T)",
    Typeset`newq$$ = "second derivate of 1.5 sen((6 \[Pi] t)/T)", 
   Typeset`chosen$$ = "D[1.5*Sin[(6*Pi*t)/T], {t, 2}]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{15., {5., 12.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "second derivate of 1.5 sen((6 \[Pi] t)/T)", 
                  Defer[
                   D[1.5 Sin[((6 Pi) Global`t)/Global`T], {Global`t, 2}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "second derivate of 1.5 sen((6 \[Pi] t)/T)", 
                    Defer[
                    D[1.5 Sin[((6 Pi) Global`t)/Global`T], {Global`t, 2}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"6", "*", "Pi", "*", "t"}], ")"}], "/", "T"}], 
                    "]"}]}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[28]:=",ExpressionUUID->"da45b5c9-76cb-412f-9500-4fe918b108b9"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"532.9586376588253`", " ", 
     RowBox[{"sin", "(", 
      FractionBox[
       RowBox[{"6", " ", "\[Pi]", " ", "t"}], "T"], ")"}]}], 
    SuperscriptBox["T", "2"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.757805700527605*^9, 3.757809585501958*^9, 
  3.757809699078951*^9, 3.7578099788210287`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"534e89ea-dab4-4157-88bc-c6d03cb6cce3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"CForm", "[", "%", "]"}], TraditionalForm]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"d22a29a1-9cbc-4584-b0fc-8b531bbee3bf"],

Cell["(-532.9586376588253*Sin((6*Pi*t)/T))/Power(T,2)", "Output",
 CellChangeTimes->{3.7578096991094847`*^9, 3.757809978845009*^9},
 CellLabel->
  "Out[29]//CForm=",ExpressionUUID->"60d6944f-82f0-4434-815a-51d8824bb951"]
}, Open  ]]
},
WindowSize->{1272, 690},
WindowMargins->{{Automatic, 315}, {Automatic, 173}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1099, 36, 293, "Input",ExpressionUUID->"34295afe-218f-460d-bc2c-e01575b0fc5c"],
Cell[CellGroupData[{
Cell[1682, 60, 262, 5, 46, "Input",ExpressionUUID->"c922258e-1c7d-4f24-b472-f8e84d66e530"],
Cell[1947, 67, 227, 4, 74, "Output",ExpressionUUID->"8f21774e-9655-4731-9d3b-dd0e42723eeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2211, 76, 15586, 381, 106, "WolframAlphaShortInput",ExpressionUUID->"ece354a9-a0c6-4bc7-aa8b-dd90bb4b2f99"],
Cell[17800, 459, 412, 11, 117, "Output",ExpressionUUID->"ddf48fa0-e915-4394-9ab0-497cc6df500c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18249, 475, 230, 4, 46, "Input",ExpressionUUID->"111bc9f9-5ad1-4e83-91f2-322adf91521d"],
Cell[18482, 481, 212, 3, 74, "Output",ExpressionUUID->"3ab1a4fa-d60a-4da0-9d6c-342b09d78eb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18731, 489, 16034, 390, 106, "WolframAlphaShortInput",ExpressionUUID->"2a21ea0f-fd47-482e-95ea-847f1b2452c6"],
Cell[34768, 881, 452, 11, 119, "Output",ExpressionUUID->"879edf2d-e92a-4e4b-9e4a-6acf8ab4a9e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35257, 897, 166, 3, 46, "Input",ExpressionUUID->"88414e7a-1600-4e47-adde-c6a6bd1a6206"],
Cell[35426, 902, 221, 3, 74, "Output",ExpressionUUID->"a1f77454-b185-4404-9bab-4be6e97c3c07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35684, 910, 363, 7, 46, "Input",ExpressionUUID->"53d53d44-b469-4eb5-b105-0f582a3ce21a"],
Cell[36050, 919, 217, 4, 74, "Output",ExpressionUUID->"79f13d19-84b1-4fc5-92d0-62b851df2e0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36304, 928, 14803, 363, 106, "WolframAlphaShortInput",ExpressionUUID->"201b9741-6141-44e6-a687-e4a1b0ce584c"],
Cell[51110, 1293, 386, 10, 117, "Output",ExpressionUUID->"6f3bf896-4b91-4e8e-aa82-b2c43c2ff51c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51533, 1308, 166, 3, 46, "Input",ExpressionUUID->"f2fd026d-51b7-4902-9964-864ae12e1708"],
Cell[51702, 1313, 209, 3, 74, "Output",ExpressionUUID->"4f036191-4fed-4d90-b00e-42583f830618"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51948, 1321, 15372, 376, 106, "WolframAlphaShortInput",ExpressionUUID->"da45b5c9-76cb-412f-9500-4fe918b108b9"],
Cell[67323, 1699, 456, 11, 119, "Output",ExpressionUUID->"534e89ea-dab4-4157-88bc-c6d03cb6cce3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67816, 1715, 166, 3, 46, "Input",ExpressionUUID->"d22a29a1-9cbc-4584-b0fc-8b531bbee3bf"],
Cell[67985, 1720, 220, 3, 74, "Output",ExpressionUUID->"60d6944f-82f0-4434-815a-51d8824bb951"]
}, Open  ]]
}
]
*)

